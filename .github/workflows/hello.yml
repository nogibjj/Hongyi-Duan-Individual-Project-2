name: Rust CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}
      - name: Build project
        run: cargo build --verbose
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11.5'
      - name: Install dependencies
        run: make install
      - name: Run tests
        env:
          DATABRICKS_KEY: ${{ secrets.DATABRICKS_KEY }}
          SERVER_HOSTNAME: ${{ secrets.SERVER_HOSTNAME }}
          HTTP_PATH: ${{ secrets.HTTP_PATH }}
        run: make test
      - name: Make lint
        run: make lint
      - name: format
        run: make format


